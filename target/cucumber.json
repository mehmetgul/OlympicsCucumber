[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2020-01-14T03:34:40.567Z",
        "before": [
          {
            "result": {
              "duration": 3808569564,
              "status": "passed"
            },
            "match": {
              "location": "Hook.setup()"
            }
          }
        ],
        "line": 4,
        "name": "",
        "description": "  Verify that Rank column is sorted by default.",
        "id": "verifying-table-information;",
        "after": [
          {
            "result": {
              "duration": 119023281,
              "status": "passed"
            },
            "match": {
              "location": "Hook.teardown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2013505445,
              "status": "passed"
            },
            "line": 6,
            "name": "user is on landing page",
            "match": {
              "location": "TestCase1Steps.user_is_on_landing_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 74549937,
              "status": "passed"
            },
            "line": 7,
            "name": "verify the Rank column is sorted",
            "match": {
              "location": "TestCase1Steps.verify_the_Rank_column_is_sorted()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 214120789,
              "status": "passed"
            },
            "line": 8,
            "name": "Click on NOC and verify that tables is sorted by the country names",
            "match": {
              "location": "TestCase1Steps.click_on_NOC_and_verify_that_tables_is_sorted_by_the_country_names()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 86401129,
              "status": "passed"
            },
            "line": 9,
            "name": "verify that rank column is NOT in ascending order.",
            "match": {
              "location": "TestCase1Steps.verify_that_rank_column_is_NOT_in_ascending_order()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verifying table information",
    "description": "  As a user I should able to verify and compare the data in given table",
    "id": "verifying-table-information",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/TestCase1.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2020-01-14T03:34:46.915Z",
        "before": [
          {
            "result": {
              "duration": 2256743942,
              "status": "passed"
            },
            "match": {
              "location": "Hook.setup()"
            }
          }
        ],
        "line": 3,
        "name": "",
        "description": "  Write a method that returns country names with smallest numbers by medals",
        "id": "the-first-from-the-bottom;",
        "after": [
          {
            "result": {
              "duration": 111350210,
              "status": "passed"
            },
            "match": {
              "location": "Hook.teardown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2007628167,
              "status": "passed"
            },
            "line": 5,
            "name": "user is on landing page",
            "match": {
              "location": "TestCase1Steps.user_is_on_landing_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2190270977,
              "status": "passed"
            },
            "line": 6,
            "name": "find country who has the smallest number of gold medals",
            "match": {
              "location": "TestCase2Steps.find_country_who_has_the_smallest_number_of_gold_medals()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2167406910,
              "status": "passed"
            },
            "line": 7,
            "name": "find country who has the smallest number of silver medals",
            "match": {
              "location": "TestCase2Steps.find_country_who_has_the_smallest_number_of_silver_medals()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2158576709,
              "status": "passed"
            },
            "line": 8,
            "name": "find country who has the smallest number of bronze medals",
            "match": {
              "location": "TestCase2Steps.find_country_who_has_the_smallest_number_of_bronze_medals()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2161140011,
              "status": "passed"
            },
            "line": 9,
            "name": "print the number of smalles from Total Medals",
            "match": {
              "location": "TestCase2Steps.print_the_number_of_smalles_from_Total_Medals()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "The first from the bottom",
    "description": "",
    "id": "the-first-from-the-bottom",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/TestCase2.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2020-01-14T03:34:59.972Z",
        "before": [
          {
            "result": {
              "duration": 3069548193,
              "status": "passed"
            },
            "match": {
              "location": "Hook.setup()"
            }
          }
        ],
        "line": 3,
        "name": "",
        "description": "  Write a method that returns a list of countries names by their silver medals",
        "id": "country-by-medal;",
        "after": [
          {
            "result": {
              "duration": 103512811,
              "status": "passed"
            },
            "match": {
              "location": "Hook.teardown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2009103320,
              "status": "passed"
            },
            "line": 5,
            "name": "user is on landing page",
            "match": {
              "location": "TestCase1Steps.user_is_on_landing_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2217960615,
              "status": "passed"
            },
            "line": 6,
            "name": "get the countries number of silver medals along with country names",
            "match": {
              "location": "TestCase3Steps.get_the_countries_number_of_silver_medals_along_with_country_names()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Country By Medal",
    "description": "",
    "id": "country-by-medal",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/TestCase3.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2020-01-14T03:35:07.375Z",
        "before": [
          {
            "result": {
              "duration": 2170095761,
              "status": "passed"
            },
            "match": {
              "location": "Hook.setup()"
            }
          }
        ],
        "line": 5,
        "name": "",
        "description": "  Write a method that takes country name and returns the row and column number\n  of that country in that table",
        "id": "get-index;",
        "after": [
          {
            "result": {
              "duration": 102155995,
              "status": "passed"
            },
            "match": {
              "location": "Hook.teardown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2011386180,
              "status": "passed"
            },
            "line": 8,
            "name": "user is on landing page",
            "match": {
              "location": "TestCase1Steps.user_is_on_landing_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 219775349,
              "status": "passed"
            },
            "line": 9,
            "name": "Find the \"Japan\" row and column",
            "match": {
              "arguments": [
                {
                  "val": "\"Japan\"",
                  "offset": 9
                }
              ],
              "location": "TestCase4Steps.find_the_row_and_column(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Get Index",
    "description": "",
    "id": "get-index",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/TestCase4.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2020-01-14T03:35:11.881Z",
        "before": [
          {
            "result": {
              "duration": 3122230869,
              "status": "passed"
            },
            "match": {
              "location": "Hook.setup()"
            }
          }
        ],
        "line": 3,
        "name": "",
        "description": "  Write a method that returns a list of\n  two countries whose sum of bronze medals is 18",
        "id": "get-sum;",
        "after": [
          {
            "result": {
              "duration": 111341245,
              "status": "passed"
            },
            "match": {
              "location": "Hook.teardown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2007646630,
              "status": "passed"
            },
            "line": 6,
            "name": "user is on landing page",
            "match": {
              "location": "TestCase1Steps.user_is_on_landing_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 156193944,
              "status": "passed"
            },
            "line": 7,
            "name": "check the all countires whoes total bronze medal sum is 18",
            "match": {
              "location": "TestCase5Steps.check_the_all_countires_whoes_total_medal_sum_is()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Get Sum",
    "description": "",
    "id": "get-sum",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/TestCase5.feature",
    "tags": []
  }
]